// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// DeleteItemTakenNoContentCode is the HTTP code returned for type DeleteItemTakenNoContent
const DeleteItemTakenNoContentCode int = 204

/*
DeleteItemTakenNoContent Success

swagger:response deleteItemTakenNoContent
*/
type DeleteItemTakenNoContent struct {
}

// NewDeleteItemTakenNoContent creates DeleteItemTakenNoContent with default headers values
func NewDeleteItemTakenNoContent() *DeleteItemTakenNoContent {

	return &DeleteItemTakenNoContent{}
}

// WriteResponse to the client
func (o *DeleteItemTakenNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteItemTakenForbiddenCode is the HTTP code returned for type DeleteItemTakenForbidden
const DeleteItemTakenForbiddenCode int = 403

/*
DeleteItemTakenForbidden Access denied (this includes untaking items from the list owned by the client)

swagger:response deleteItemTakenForbidden
*/
type DeleteItemTakenForbidden struct {
}

// NewDeleteItemTakenForbidden creates DeleteItemTakenForbidden with default headers values
func NewDeleteItemTakenForbidden() *DeleteItemTakenForbidden {

	return &DeleteItemTakenForbidden{}
}

// WriteResponse to the client
func (o *DeleteItemTakenForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// DeleteItemTakenNotFoundCode is the HTTP code returned for type DeleteItemTakenNotFound
const DeleteItemTakenNotFoundCode int = 404

/*
DeleteItemTakenNotFound List not found

swagger:response deleteItemTakenNotFound
*/
type DeleteItemTakenNotFound struct {
}

// NewDeleteItemTakenNotFound creates DeleteItemTakenNotFound with default headers values
func NewDeleteItemTakenNotFound() *DeleteItemTakenNotFound {

	return &DeleteItemTakenNotFound{}
}

// WriteResponse to the client
func (o *DeleteItemTakenNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// DeleteItemTakenConflictCode is the HTTP code returned for type DeleteItemTakenConflict
const DeleteItemTakenConflictCode int = 409

/*
DeleteItemTakenConflict Either an outdated revision, or item is not taken by the client.

swagger:response deleteItemTakenConflict
*/
type DeleteItemTakenConflict struct {

	/*
	  In: Body
	*/
	Payload *DeleteItemTakenConflictBody `json:"body,omitempty"`
}

// NewDeleteItemTakenConflict creates DeleteItemTakenConflict with default headers values
func NewDeleteItemTakenConflict() *DeleteItemTakenConflict {

	return &DeleteItemTakenConflict{}
}

// WithPayload adds the payload to the delete item taken conflict response
func (o *DeleteItemTakenConflict) WithPayload(payload *DeleteItemTakenConflictBody) *DeleteItemTakenConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete item taken conflict response
func (o *DeleteItemTakenConflict) SetPayload(payload *DeleteItemTakenConflictBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteItemTakenConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteItemTakenInternalServerErrorCode is the HTTP code returned for type DeleteItemTakenInternalServerError
const DeleteItemTakenInternalServerErrorCode int = 500

/*
DeleteItemTakenInternalServerError Server error

swagger:response deleteItemTakenInternalServerError
*/
type DeleteItemTakenInternalServerError struct {
}

// NewDeleteItemTakenInternalServerError creates DeleteItemTakenInternalServerError with default headers values
func NewDeleteItemTakenInternalServerError() *DeleteItemTakenInternalServerError {

	return &DeleteItemTakenInternalServerError{}
}

// WriteResponse to the client
func (o *DeleteItemTakenInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
