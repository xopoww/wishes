// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PostItemTakenNoContentCode is the HTTP code returned for type PostItemTakenNoContent
const PostItemTakenNoContentCode int = 204

/*
PostItemTakenNoContent Success

swagger:response postItemTakenNoContent
*/
type PostItemTakenNoContent struct {
}

// NewPostItemTakenNoContent creates PostItemTakenNoContent with default headers values
func NewPostItemTakenNoContent() *PostItemTakenNoContent {

	return &PostItemTakenNoContent{}
}

// WriteResponse to the client
func (o *PostItemTakenNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// PostItemTakenForbiddenCode is the HTTP code returned for type PostItemTakenForbidden
const PostItemTakenForbiddenCode int = 403

/*
PostItemTakenForbidden Access denied (this includes taking items from the list owned by the client)

swagger:response postItemTakenForbidden
*/
type PostItemTakenForbidden struct {
}

// NewPostItemTakenForbidden creates PostItemTakenForbidden with default headers values
func NewPostItemTakenForbidden() *PostItemTakenForbidden {

	return &PostItemTakenForbidden{}
}

// WriteResponse to the client
func (o *PostItemTakenForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// PostItemTakenNotFoundCode is the HTTP code returned for type PostItemTakenNotFound
const PostItemTakenNotFoundCode int = 404

/*
PostItemTakenNotFound List not found

swagger:response postItemTakenNotFound
*/
type PostItemTakenNotFound struct {
}

// NewPostItemTakenNotFound creates PostItemTakenNotFound with default headers values
func NewPostItemTakenNotFound() *PostItemTakenNotFound {

	return &PostItemTakenNotFound{}
}

// WriteResponse to the client
func (o *PostItemTakenNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// PostItemTakenConflictCode is the HTTP code returned for type PostItemTakenConflict
const PostItemTakenConflictCode int = 409

/*
PostItemTakenConflict Either an outdated revision, or item is already taken. See response.reason.

swagger:response postItemTakenConflict
*/
type PostItemTakenConflict struct {

	/*
	  In: Body
	*/
	Payload *PostItemTakenConflictBody `json:"body,omitempty"`
}

// NewPostItemTakenConflict creates PostItemTakenConflict with default headers values
func NewPostItemTakenConflict() *PostItemTakenConflict {

	return &PostItemTakenConflict{}
}

// WithPayload adds the payload to the post item taken conflict response
func (o *PostItemTakenConflict) WithPayload(payload *PostItemTakenConflictBody) *PostItemTakenConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post item taken conflict response
func (o *PostItemTakenConflict) SetPayload(payload *PostItemTakenConflictBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostItemTakenConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostItemTakenInternalServerErrorCode is the HTTP code returned for type PostItemTakenInternalServerError
const PostItemTakenInternalServerErrorCode int = 500

/*
PostItemTakenInternalServerError Server error

swagger:response postItemTakenInternalServerError
*/
type PostItemTakenInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *PostItemTakenInternalServerErrorBody `json:"body,omitempty"`
}

// NewPostItemTakenInternalServerError creates PostItemTakenInternalServerError with default headers values
func NewPostItemTakenInternalServerError() *PostItemTakenInternalServerError {

	return &PostItemTakenInternalServerError{}
}

// WithPayload adds the payload to the post item taken internal server error response
func (o *PostItemTakenInternalServerError) WithPayload(payload *PostItemTakenInternalServerErrorBody) *PostItemTakenInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post item taken internal server error response
func (o *PostItemTakenInternalServerError) SetPayload(payload *PostItemTakenInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostItemTakenInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
