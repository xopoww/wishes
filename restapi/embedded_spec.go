// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Wishes API",
    "version": "0.0.7"
  },
  "basePath": "/api",
  "paths": {
    "/lists": {
      "get": {
        "summary": "Get user list IDs (visible by client)",
        "operationId": "GetUserLists",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of user in question. If empty, client ID is used.",
            "name": "UserID",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "integer"
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "post": {
        "summary": "Create new list",
        "operationId": "PostList",
        "parameters": [
          {
            "name": "list",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/List"
                },
                {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/ListItem"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ID"
            }
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      }
    },
    "/lists/{id}": {
      "get": {
        "summary": "Get list info (title, etc)",
        "operationId": "GetList",
        "parameters": [
          {
            "$ref": "#/parameters/AccessToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/List"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "List not found"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "delete": {
        "summary": "Delete existing list",
        "operationId": "DeleteList",
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "List not found"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "patch": {
        "summary": "Edit existing list (not list items)",
        "operationId": "PatchList",
        "parameters": [
          {
            "name": "list",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/List"
                }
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "List not found"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/PathId"
        }
      ]
    },
    "/lists/{id}/items": {
      "get": {
        "summary": "Get list items",
        "operationId": "GetListItems",
        "parameters": [
          {
            "$ref": "#/parameters/AccessToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Revision"
                },
                {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/ID"
                          },
                          {
                            "$ref": "#/definitions/ListItem"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "List not found"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "post": {
        "summary": "Add items to existing list",
        "operationId": "PostListItems",
        "parameters": [
          {
            "name": "items",
            "in": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Revision"
                },
                {
                  "type": "object",
                  "required": [
                    "items"
                  ],
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/ListItem"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Revision"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "List not found"
          },
          "409": {
            "description": "Outdated revision"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "delete": {
        "summary": "Delete items from existing list",
        "operationId": "DeleteListItems",
        "parameters": [
          {
            "type": "integer",
            "name": "rev",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "csv",
            "name": "ids",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Revision"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "List not found"
          },
          "409": {
            "description": "Outdated revision"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/PathId"
        }
      ]
    },
    "/lists/{id}/token": {
      "get": {
        "summary": "Get access token for a list",
        "operationId": "GetListToken",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "List not found"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/PathId"
        }
      ]
    },
    "/login": {
      "post": {
        "security": [],
        "description": "Return api token for authorized User",
        "operationId": "Login",
        "parameters": [
          {
            "name": "credentials",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCredentials"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login result",
            "schema": {
              "type": "object",
              "required": [
                "ok"
              ],
              "properties": {
                "ok": {
                  "type": "boolean"
                },
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      }
    },
    "/users": {
      "post": {
        "security": [],
        "summary": "Register new user",
        "operationId": "Register",
        "parameters": [
          {
            "name": "credentials",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCredentials"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Registration result",
            "schema": {
              "type": "object",
              "required": [
                "ok"
              ],
              "properties": {
                "error": {
                  "type": "string"
                },
                "ok": {
                  "type": "boolean"
                },
                "user": {
                  "$ref": "#/definitions/ID"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get user info",
        "operationId": "GetUser",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "patch": {
        "summary": "Edit user info",
        "operationId": "PatchUser",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Access denied"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/PathId"
        }
      ]
    }
  },
  "definitions": {
    "ID": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer"
        }
      }
    },
    "List": {
      "type": "object",
      "required": [
        "title",
        "access"
      ],
      "properties": {
        "access": {
          "type": "string",
          "enum": [
            "private",
            "link",
            "public"
          ]
        },
        "ownerID": {
          "type": "integer"
        },
        "title": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "ListItem": {
      "type": "object",
      "required": [
        "title"
      ],
      "properties": {
        "desc": {
          "type": "string"
        },
        "taken_by": {
          "type": "integer"
        },
        "title": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "Revision": {
      "type": "object",
      "required": [
        "rev"
      ],
      "properties": {
        "rev": {
          "type": "integer"
        }
      }
    },
    "User": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "username": {
              "$ref": "#/definitions/UserName"
            }
          }
        },
        {
          "$ref": "#/definitions/UserInfo"
        }
      ]
    },
    "UserCredentials": {
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "password": {
          "type": "string",
          "format": "password",
          "maxLength": 50,
          "minLength": 8
        },
        "username": {
          "$ref": "#/definitions/UserName"
        }
      }
    },
    "UserInfo": {
      "type": "object",
      "required": [
        "fname",
        "lname"
      ],
      "properties": {
        "fname": {
          "type": "string"
        },
        "lname": {
          "type": "string"
        }
      }
    },
    "UserName": {
      "type": "string",
      "maxLength": 20,
      "minLength": 3
    },
    "principal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "username": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "AccessToken": {
      "type": "string",
      "description": "Optional access token for a list provided by list owner",
      "name": "accessToken",
      "in": "query"
    },
    "PathId": {
      "type": "integer",
      "name": "id",
      "in": "path",
      "required": true
    }
  },
  "responses": {
    "ServerError": {
      "description": "Server error",
      "schema": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "KeySecurity": {
      "type": "apiKey",
      "name": "x-token",
      "in": "header"
    }
  },
  "security": [
    {
      "KeySecurity": []
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Wishes API",
    "version": "0.0.7"
  },
  "basePath": "/api",
  "paths": {
    "/lists": {
      "get": {
        "summary": "Get user list IDs (visible by client)",
        "operationId": "GetUserLists",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of user in question. If empty, client ID is used.",
            "name": "UserID",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "integer"
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "required": [
                "error"
              ],
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create new list",
        "operationId": "PostList",
        "parameters": [
          {
            "name": "list",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/List"
                },
                {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/ListItem"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ID"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "required": [
                "error"
              ],
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/lists/{id}": {
      "get": {
        "summary": "Get list info (title, etc)",
        "operationId": "GetList",
        "parameters": [
          {
            "type": "string",
            "description": "Optional access token for a list provided by list owner",
            "name": "accessToken",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/List"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "List not found"
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "required": [
                "error"
              ],
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete existing list",
        "operationId": "DeleteList",
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "List not found"
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "required": [
                "error"
              ],
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Edit existing list (not list items)",
        "operationId": "PatchList",
        "parameters": [
          {
            "name": "list",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/List"
                }
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "List not found"
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "required": [
                "error"
              ],
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/lists/{id}/items": {
      "get": {
        "summary": "Get list items",
        "operationId": "GetListItems",
        "parameters": [
          {
            "type": "string",
            "description": "Optional access token for a list provided by list owner",
            "name": "accessToken",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Revision"
                },
                {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/ItemsItems0"
                      }
                    }
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "List not found"
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "required": [
                "error"
              ],
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add items to existing list",
        "operationId": "PostListItems",
        "parameters": [
          {
            "name": "items",
            "in": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Revision"
                },
                {
                  "type": "object",
                  "required": [
                    "items"
                  ],
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/ListItem"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Revision"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "List not found"
          },
          "409": {
            "description": "Outdated revision"
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "required": [
                "error"
              ],
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete items from existing list",
        "operationId": "DeleteListItems",
        "parameters": [
          {
            "type": "integer",
            "name": "rev",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "csv",
            "name": "ids",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Revision"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "List not found"
          },
          "409": {
            "description": "Outdated revision"
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "required": [
                "error"
              ],
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/lists/{id}/token": {
      "get": {
        "summary": "Get access token for a list",
        "operationId": "GetListToken",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "List not found"
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "required": [
                "error"
              ],
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/login": {
      "post": {
        "security": [],
        "description": "Return api token for authorized User",
        "operationId": "Login",
        "parameters": [
          {
            "name": "credentials",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCredentials"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login result",
            "schema": {
              "type": "object",
              "required": [
                "ok"
              ],
              "properties": {
                "ok": {
                  "type": "boolean"
                },
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "required": [
                "error"
              ],
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "security": [],
        "summary": "Register new user",
        "operationId": "Register",
        "parameters": [
          {
            "name": "credentials",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCredentials"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Registration result",
            "schema": {
              "type": "object",
              "required": [
                "ok"
              ],
              "properties": {
                "error": {
                  "type": "string"
                },
                "ok": {
                  "type": "boolean"
                },
                "user": {
                  "$ref": "#/definitions/ID"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "required": [
                "error"
              ],
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get user info",
        "operationId": "GetUser",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "required": [
                "error"
              ],
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Edit user info",
        "operationId": "PatchUser",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Access denied"
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "required": [
                "error"
              ],
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "ID": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer"
        }
      }
    },
    "ItemsItems0": {
      "allOf": [
        {
          "$ref": "#/definitions/ID"
        },
        {
          "$ref": "#/definitions/ListItem"
        }
      ]
    },
    "List": {
      "type": "object",
      "required": [
        "title",
        "access"
      ],
      "properties": {
        "access": {
          "type": "string",
          "enum": [
            "private",
            "link",
            "public"
          ]
        },
        "ownerID": {
          "type": "integer"
        },
        "title": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "ListItem": {
      "type": "object",
      "required": [
        "title"
      ],
      "properties": {
        "desc": {
          "type": "string"
        },
        "taken_by": {
          "type": "integer"
        },
        "title": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "Revision": {
      "type": "object",
      "required": [
        "rev"
      ],
      "properties": {
        "rev": {
          "type": "integer"
        }
      }
    },
    "User": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "username": {
              "$ref": "#/definitions/UserName"
            }
          }
        },
        {
          "$ref": "#/definitions/UserInfo"
        }
      ]
    },
    "UserCredentials": {
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "password": {
          "type": "string",
          "format": "password",
          "maxLength": 50,
          "minLength": 8
        },
        "username": {
          "$ref": "#/definitions/UserName"
        }
      }
    },
    "UserInfo": {
      "type": "object",
      "required": [
        "fname",
        "lname"
      ],
      "properties": {
        "fname": {
          "type": "string"
        },
        "lname": {
          "type": "string"
        }
      }
    },
    "UserName": {
      "type": "string",
      "maxLength": 20,
      "minLength": 3
    },
    "principal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "username": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "AccessToken": {
      "type": "string",
      "description": "Optional access token for a list provided by list owner",
      "name": "accessToken",
      "in": "query"
    },
    "PathId": {
      "type": "integer",
      "name": "id",
      "in": "path",
      "required": true
    }
  },
  "responses": {
    "ServerError": {
      "description": "Server error",
      "schema": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "KeySecurity": {
      "type": "apiKey",
      "name": "x-token",
      "in": "header"
    }
  },
  "security": [
    {
      "KeySecurity": []
    }
  ]
}`))
}
